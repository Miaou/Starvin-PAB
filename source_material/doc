Comme d'hab, on retrouve mon fameux doc...

---------------
 Pour les sons 
---------------
1) Tuto de base :
 - lien à s'abonner avant : http://steamcommunity.com/sharedfiles/filedetails/?id=178261761
 - ça devrait DL sound_mod_tutorial dans dont_starve\mods
 - si, comme moi, tu n'as pas dont_starve, faut aller dans Steam\userdata et chercher un mod_publish_data_file.zip de ~270ko
 - http://forums.kleientertainment.com/topic/27721-sound-mod-tutorial/
2) Comprendre FMOD Designer :
 - les catego, ça se crée, et on utilise le template de sound_mod_tutorial
 - il faut ensuite rajouter des sons dans les catego
 - on peut aussi suivre monsieur : http://forums.kleientertainment.com/topic/27803-tutorial-adding-custom-sound-to-your-custom-character/
 - (c'est le template_waverly.fdp)
 - régler les paramètres 3D
 - dans le lua, on accède au son via "farts/characters/pab/fart" où le farts est le nom du projet... (c'est le path qu'on voit dans FMOD Designer associé à un event en fait)
3) Pouvoir utiliser le son in-game :
 - http://steamcommunity.com/sharedfiles/filedetails/?id=177285852



-----------
 Scriptons 
-----------
1) Y'a pas mal d'éléments en parcourant les fichiers sources
 - prefabs
 - brains
 - state graph
 - behavior trees
2) Monsieur ici fait un beau résumé : http://forums.kleientertainment.com/topic/25850-wots-the-diff-prefabs-components-stategraphs-and-brains/
 - prefabs -> config & status, config existing behhavior (see prefabs/wx78)
 - components -> how things are done (components/hunger)
 - state graphs -> what's being done, and how prioritarily + the different states of the prefab
 - brains -> how decision are made (highest level)


-------
 TODOs 
-------
- fart : + hunger + sanity
- fart : mieux random
- fart : pti nuage
- fart : différencier le son et la qutité en fct de l'apport de bouffe (voire une barre de pet)
- fart : j'apprécie les fruits au sirop
- eat : manger plus lentement, se fait probablement en changeant son StateGraph, le State dont le nom est "eat", il faut changer la timeline, le 1° ou 2° TimeEvent, pour le rallonger
  -> c'est pas ThePlayer.sg.sg.states.eat.timeline[1].time et ThePlayer.sg.sg.states.quickeat... mais les changer à la volée ne fait rien de bon...


